$blue : #228be6; //scss에서 변수 선언시 $ 사용
$gray : #495057;
$pink : #f06595;

@mixin button-color($color) { //유사한 코드가 반복된다면 쓰는 mixin => 사용 시 @include button-color($blue);로 사용
    background: $color; 
    &:hover { 
        background: lighten($color, 10%); 
    }
    
    &:active {
        background: darken($color, 10%); 
    }

    &.outline { //outline이 true일 때=>적용되었을 때
        color: $color;
        background: none;
        border: 1px solid $color;
        &:hover {
            background: $color;
            color: white;
        }
    }
}

.Button {
    display: inline-flex;
    align-items: center; //중앙정렬1
    justify-content: center; //중앙정렬2
    color: white;
    font-weight: bold;
    outline: none;
    border-radius: 4px; //둥글게
    border: none;
    cursor: pointer; //커서가 포인트 모양으로 변형
  
    padding-left: 1rem;
    padding-right: 1rem;
    &.large{
        height: 3rem; 
        font-size: 1.25rem;
    }

    &.medium{
        height: 2.25rem; // rem : 현재 기본 브라우저 기본폰트사이즈에 대해  *기능을 함
        font-size: 1rem;
    }

    &.small{
        height: 1.75rem; 
        font-size: 0.875rem;
    }

    &.blue{
        // background: $blue; // 위의 변수 사용
        // &:hover { //&는 자기 자신을 의미하는 것 ==> .Button:hover 과 같은 의미
        // background: lighten($blue, 10%); // 색상 10% 밝게
        // }
    
        // &:active {
        // background: darken($blue, 10%); // 색상 10% 어둡게
        // }
        @include button-color($blue);
    }

    &.gray{ //같은 이름명을 같이 바꾸고 싶다면 ctrl + d 여러번 누르기
        // background: $gray; 
        // &:hover { 
        // background: lighten($gray, 10%); 
        // }
    
        // &:active {
        // background: darken($gray, 10%); 
        // }
        @include button-color($gray);
    }

    &.pink{
        // background: $pink; 
        // &:hover {
        // background: lighten($pink, 10%); 
        // }
    
        // &:active {
        // background: darken($pink, 10%); 
        // }
        @include button-color($pink);
    }

    &.fullWidth {
        width: 100%;
        justify-content: center; //좌우 해서 가운데 정렬 => 이 프로퍼티는 flex일 때만 사용가능
        & + & {
            margin-left: 0;
            margin-top: 1rem;
        }
    }

    // & + & { //이 스타일(.Button)과 이 스타일(.Button)이 같이 있으면 특정 스타일을 넣겠다. => 오른쪽에게 특정 스타일 넣는거
    //     margin-left: 1rem;
    // }
  }

  .Button + .Button { //이 스타일(.Button)과 이 스타일(.Button)이 같이 있으면 특정 스타일을 넣겠다. => 오른쪽에게 특정 스타일 넣는거
    margin-left: 1rem;
  }